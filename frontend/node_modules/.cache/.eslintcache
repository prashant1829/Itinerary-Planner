[{"D:\\Itinerary Planner\\frontend\\src\\index.js":"1","D:\\Itinerary Planner\\frontend\\src\\reportWebVitals.js":"2","D:\\Itinerary Planner\\frontend\\src\\App.js":"3","D:\\Itinerary Planner\\frontend\\src\\RootNavigation.js":"4","D:\\Itinerary Planner\\frontend\\src\\services\\authWs.js":"5","D:\\Itinerary Planner\\frontend\\src\\components\\index.js":"6","D:\\Itinerary Planner\\frontend\\src\\api\\ServerAPI.js":"7","D:\\Itinerary Planner\\frontend\\src\\utils\\clear-res.js":"8","D:\\Itinerary Planner\\frontend\\src\\pages\\index.js":"9","D:\\Itinerary Planner\\frontend\\src\\components\\Map\\MapPlaces.jsx":"10","D:\\Itinerary Planner\\frontend\\src\\components\\Map\\index.jsx":"11","D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCardIntro\\index.js":"12","D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCard\\index.js":"13","D:\\Itinerary Planner\\frontend\\src\\components\\Login\\index.jsx":"14","D:\\Itinerary Planner\\frontend\\src\\components\\Loader\\index.jsx":"15","D:\\Itinerary Planner\\frontend\\src\\components\\Navbar\\index.jsx":"16","D:\\Itinerary Planner\\frontend\\src\\components\\Filters\\index.jsx":"17","D:\\Itinerary Planner\\frontend\\src\\components\\SignUp\\index.jsx":"18","D:\\Itinerary Planner\\frontend\\src\\components\\TripCard\\index.jsx":"19","D:\\Itinerary Planner\\frontend\\src\\components\\SearchBox\\index.jsx":"20","D:\\Itinerary Planner\\frontend\\src\\components\\PlacesList\\index.jsx":"21","D:\\Itinerary Planner\\frontend\\src\\components\\NewTripForm\\index.jsx":"22","D:\\Itinerary Planner\\frontend\\src\\components\\ProfileCard\\index.jsx":"23","D:\\Itinerary Planner\\frontend\\src\\components\\PlaceMarker\\index.jsx":"24","D:\\Itinerary Planner\\frontend\\src\\components\\AddTripCard\\index.jsx":"25","D:\\Itinerary Planner\\frontend\\src\\components\\NewTripPopUp\\index.jsx":"26","D:\\Itinerary Planner\\frontend\\src\\components\\HomeAddCard\\index.jsx":"27","D:\\Itinerary Planner\\frontend\\src\\components\\EditTripPopUp\\index.jsx":"28","D:\\Itinerary Planner\\frontend\\src\\components\\NoPlacesFound\\index.jsx":"29","D:\\Itinerary Planner\\frontend\\src\\components\\DestinationCard\\index.jsx":"30","D:\\Itinerary Planner\\frontend\\src\\components\\SavePlacePopUp\\index.jsx":"31","D:\\Itinerary Planner\\frontend\\src\\components\\ChangePasswordForm\\index.jsx":"32","D:\\Itinerary Planner\\frontend\\src\\pages\\Auth\\index.jsx":"33","D:\\Itinerary Planner\\frontend\\src\\pages\\Profile\\index.jsx":"34","D:\\Itinerary Planner\\frontend\\src\\pages\\Explore\\index.jsx":"35","D:\\Itinerary Planner\\frontend\\src\\pages\\AroundMe\\index.jsx":"36","D:\\Itinerary Planner\\frontend\\src\\pages\\Home\\index.jsx":"37","D:\\Itinerary Planner\\frontend\\src\\pages\\MyTrips\\index.jsx":"38","D:\\Itinerary Planner\\frontend\\src\\pages\\ChangePassword\\index.jsx":"39","D:\\Itinerary Planner\\frontend\\src\\services\\tripsWs.js":"40","D:\\Itinerary Planner\\frontend\\src\\pages\\MyPlaces\\index.jsx":"41","D:\\Itinerary Planner\\frontend\\src\\services\\uploadWs.js":"42","D:\\Itinerary Planner\\frontend\\src\\services\\placesWs.js":"43","D:\\Itinerary Planner\\frontend\\src\\components\\PlaceCard\\index.jsx":"44","D:\\Itinerary Planner\\frontend\\src\\api\\WeatherAPI.js":"45","D:\\Itinerary Planner\\frontend\\src\\api\\TravelAPI.js":"46","D:\\Itinerary Planner\\frontend\\src\\api\\GeoLocationAPI.js":"47","D:\\Itinerary Planner\\frontend\\src\\pages\\ContactUs\\index.jsx":"48","D:\\Itinerary Planner\\frontend\\src\\pages\\AboutUs\\index.jsx":"49","D:\\Itinerary Planner\\frontend\\src\\pages\\Weather\\index.jsx":"50","D:\\Itinerary Planner\\frontend\\src\\components\\WeatherSearchBox\\index.jsx":"51","D:\\Itinerary Planner\\frontend\\src\\components\\Subtitle\\index.jsx":"52","D:\\Itinerary Planner\\frontend\\src\\components\\ServiceList\\index.jsx":"53","D:\\Itinerary Planner\\frontend\\src\\components\\ServiceList\\ServiceCard.jsx":"54","D:\\Itinerary Planner\\frontend\\src\\components\\Footer\\index.jsx":"55"},{"size":613,"mtime":1718596309356,"results":"56","hashOfConfig":"57"},{"size":375,"mtime":1718596309363,"results":"58","hashOfConfig":"57"},{"size":1073,"mtime":1719321019165,"results":"59","hashOfConfig":"57"},{"size":1329,"mtime":1719320054663,"results":"60","hashOfConfig":"57"},{"size":1420,"mtime":1718596310158,"results":"61","hashOfConfig":"57"},{"size":1503,"mtime":1719319259896,"results":"62","hashOfConfig":"57"},{"size":311,"mtime":1718596309395,"results":"63","hashOfConfig":"57"},{"size":473,"mtime":1718596310193,"results":"64","hashOfConfig":"57"},{"size":549,"mtime":1719300005196,"results":"65","hashOfConfig":"57"},{"size":1021,"mtime":1718596309762,"results":"66","hashOfConfig":"57"},{"size":1198,"mtime":1718596309747,"results":"67","hashOfConfig":"57"},{"size":942,"mtime":1719299719118,"results":"68","hashOfConfig":"57"},{"size":3356,"mtime":1719299694617,"results":"69","hashOfConfig":"57"},{"size":3110,"mtime":1719312234261,"results":"70","hashOfConfig":"57"},{"size":523,"mtime":1718596309708,"results":"71","hashOfConfig":"57"},{"size":4813,"mtime":1719311081531,"results":"72","hashOfConfig":"57"},{"size":1631,"mtime":1718596309680,"results":"73","hashOfConfig":"57"},{"size":3764,"mtime":1718894961663,"results":"74","hashOfConfig":"57"},{"size":3819,"mtime":1718596309949,"results":"75","hashOfConfig":"57"},{"size":1266,"mtime":1719321267550,"results":"76","hashOfConfig":"57"},{"size":1369,"mtime":1718596309871,"results":"77","hashOfConfig":"57"},{"size":2362,"mtime":1718596309793,"results":"78","hashOfConfig":"57"},{"size":6044,"mtime":1719319028558,"results":"79","hashOfConfig":"57"},{"size":923,"mtime":1718596309851,"results":"80","hashOfConfig":"57"},{"size":1601,"mtime":1718596309629,"results":"81","hashOfConfig":"57"},{"size":3811,"mtime":1718596309803,"results":"82","hashOfConfig":"57"},{"size":1902,"mtime":1718596309698,"results":"83","hashOfConfig":"57"},{"size":5449,"mtime":1718596309662,"results":"84","hashOfConfig":"57"},{"size":831,"mtime":1718596309814,"results":"85","hashOfConfig":"57"},{"size":1142,"mtime":1718596309651,"results":"86","hashOfConfig":"57"},{"size":5769,"mtime":1718596309901,"results":"87","hashOfConfig":"57"},{"size":6449,"mtime":1718596309641,"results":"88","hashOfConfig":"57"},{"size":935,"mtime":1718596310028,"results":"89","hashOfConfig":"57"},{"size":1040,"mtime":1719319155869,"results":"90","hashOfConfig":"57"},{"size":4135,"mtime":1719302723378,"results":"91","hashOfConfig":"57"},{"size":18755,"mtime":1719134644017,"results":"92","hashOfConfig":"57"},{"size":3467,"mtime":1719309955888,"results":"93","hashOfConfig":"57"},{"size":1586,"mtime":1718596310109,"results":"94","hashOfConfig":"57"},{"size":1038,"mtime":1718596310040,"results":"95","hashOfConfig":"57"},{"size":1468,"mtime":1718596310173,"results":"96","hashOfConfig":"57"},{"size":3132,"mtime":1718596310089,"results":"97","hashOfConfig":"57"},{"size":259,"mtime":1718596310180,"results":"98","hashOfConfig":"57"},{"size":1213,"mtime":1718596310165,"results":"99","hashOfConfig":"57"},{"size":5769,"mtime":1718596309833,"results":"100","hashOfConfig":"57"},{"size":875,"mtime":1719299895084,"results":"101","hashOfConfig":"57"},{"size":717,"mtime":1719152103677,"results":"102","hashOfConfig":"57"},{"size":364,"mtime":1719049480556,"results":"103","hashOfConfig":"57"},{"size":2280,"mtime":1719240483414,"results":"104","hashOfConfig":"57"},{"size":2240,"mtime":1719241065282,"results":"105","hashOfConfig":"57"},{"size":1839,"mtime":1719303954720,"results":"106","hashOfConfig":"57"},{"size":1084,"mtime":1719318502912,"results":"107","hashOfConfig":"57"},{"size":178,"mtime":1719307024326,"results":"108","hashOfConfig":"57"},{"size":1392,"mtime":1719307429573,"results":"109","hashOfConfig":"57"},{"size":406,"mtime":1719306447513,"results":"110","hashOfConfig":"57"},{"size":323,"mtime":1719321019165,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"10a7yj",{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"115"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"115"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"115"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"115"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"115"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"115"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"115"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"115"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"115"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"115"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Itinerary Planner\\frontend\\src\\index.js",[],[],["289","290"],"D:\\Itinerary Planner\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\App.js",["291","292"],[],"D:\\Itinerary Planner\\frontend\\src\\RootNavigation.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\services\\authWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\index.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\ServerAPI.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\utils\\clear-res.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\index.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Map\\MapPlaces.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Map\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCardIntro\\index.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCard\\index.js",["293","294"],[],"import \"./WeatherCard.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport ThermostatOutlinedIcon from \"@mui/icons-material/ThermostatOutlined\";\r\nimport ModeNightIcon from \"@mui/icons-material/ModeNight\";\r\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\r\nimport WaterIcon from \"@mui/icons-material/Water\";\r\n\r\nconst WeatherCard = ({ day }) => {\r\n  const [dateOfDay, setDateOfDay] = useState(day.datetime);\r\n\r\n  const formatDate = () => {\r\n    const date = new Date(day.datetime);\r\n    const dayOfWeek = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\r\n    const month = date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n    const dayOfMonth = date.getDate();\r\n    const year = date.getFullYear();\r\n    const dateFormatted = `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n    setDateOfDay(dateFormatted);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formatDate();\r\n  }, [day.datetime]);\r\n\r\n  return (\r\n    <>\r\n      <Card sx={{ width: 215, maxWidth: 215, maxHeight: 315, m: 0.5, my: 1 }} elevation={3}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"subtitle2\" component=\"div\">\r\n            {dateOfDay}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              width: 60,\r\n              justifyContent: \"center\",\r\n              ml: 7,\r\n            }}\r\n            className=\"weather-icon-box\"\r\n          >\r\n            {/* <CardMedia\r\n              component=\"img\"\r\n              height=\"60\"\r\n              image={`https://www.visualcrossing.com/img/icons/${day.icon}.png`}\r\n              alt=\"weather icon\"\r\n            /> */}\r\n          </Box>\r\n          <Divider>\r\n            <Typography variant=\"caption\" gutterBottom>\r\n              <Chip label={day.conditions} />\r\n            </Typography>\r\n          </Divider>\r\n          <Box\r\n            sx={{\r\n              width: 170,\r\n              my: 1,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              <ThermostatOutlinedIcon fontSize=\"small\" color=\"disabled\" /> Temp.\r\n              <Typography variant=\"caption\"> {day.temp}ºC</Typography>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              <WaterIcon fontSize=\"small\" color=\"disabled\" /> Feels Like:\r\n              <Typography variant=\"caption\"> {day.feelslike}ºC</Typography>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              <WbSunnyIcon fontSize=\"small\" color=\"disabled\" /> Max Temp:\r\n              <Typography variant=\"caption\"> {day.tempmax}ºC</Typography>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              <ModeNightIcon fontSize=\"small\" color=\"disabled\" /> Night Temp.:\r\n              <Typography variant=\"caption\"> {day.tempmin}ºC</Typography>\r\n            </Typography>\r\n          </Box>\r\n          <Chip\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            label={`Humidity: ${day.humidity}%`}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\Login\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Loader\\index.jsx",["295"],[],"import './Loader.css'\r\nimport { useState } from \"react\";\r\nimport BackdropUnstyled from '@mui/base/BackdropUnstyled';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Loader = () => {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <BackdropUnstyled\r\n      sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      open={open} className=\"place-list-loader\"\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n    </BackdropUnstyled>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\Navbar\\index.jsx",["296","297","298","299"],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Filters\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\SignUp\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\TripCard\\index.jsx",["300"],[],"import \"./TripCard.css\";\r\nimport {\r\n  TwitterIcon,\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n} from \"react-share\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteTrip, getAllPlacesFromTrip } from \"../../services/tripsWs\";\r\nimport EditTripPopUp from \"../EditTripPopUp\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nconst TripCard = ({ trip }) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const shareUrl = `http://travelfy.netlify.app/trips/share/${trip._id}/places`;\r\n\r\n  const placesFromTrip = async () => {\r\n    const havePlaces = await getAllPlacesFromTrip(trip._id);\r\n    if (havePlaces) {\r\n      setPlaces(havePlaces.data.places);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteTrip(trip._id);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    placesFromTrip();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card sx={{ width: 250, maxWidth: 275 }} className=\"trip-card-wrapper\">\r\n        {places.length > 0 ? (\r\n          <Link\r\n            to={`/trips/${trip._id}/places`}\r\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n          >\r\n            <CardHeader title={trip.title} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={trip.tripImage}\r\n              alt=\"travelfy\"\r\n            />\r\n          </Link>\r\n        ) : (\r\n          <>\r\n            <CardHeader title={trip.title} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={trip.tripImage}\r\n              alt=\"travelfy\"\r\n            />\r\n          </>\r\n        )}\r\n        <CardContent className=\"card-content-wrapper\">\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {trip.description}\r\n          </Typography>\r\n          <div className=\"social-share-div\">\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n              Share on:\r\n            </Typography>\r\n            <TwitterShareButton\r\n              url={shareUrl}\r\n              title={`This is my travel list \"${trip.title}\" @Travelfy`}\r\n            >\r\n              <TwitterIcon size={29} round={true} />\r\n            </TwitterShareButton>\r\n            <FacebookShareButton\r\n              url={shareUrl}\r\n              quote={`This is my travel list \"${trip.title}\" @Travelfy`}\r\n            >\r\n              <FacebookIcon size={29} round={true} />\r\n            </FacebookShareButton>\r\n            <WhatsappShareButton\r\n              url={shareUrl}\r\n              title={`This is my travel list \"${trip.title}\" @Travelfy`}\r\n            >\r\n              <WhatsappIcon size={29} round={true} m={1} />\r\n            </WhatsappShareButton>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions disableSpacing className=\"new-trip-actions\">\r\n          <IconButton aria-label=\"edit\" onClick={handleClickOpen}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <EditTripPopUp trip={trip} open={open} setOpen={setOpen} />\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TripCard;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\SearchBox\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\PlacesList\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\NewTripForm\\index.jsx",["301"],[],"import { useState } from \"react\";\r\nimport { createTrip } from \"../../services/tripsWs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport LuggageIcon from \"@mui/icons-material/Luggage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst NewTripForm = ({ open, setOpen, ...props }) => {\r\n  const [error, setError] = useState(null);\r\n  const [tripName, setTripName] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTripName(value);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const newTripSave = async () => {\r\n    const newTrip = {\r\n      title: tripName,\r\n    };\r\n\r\n    createTrip(newTrip)\r\n      .then((response) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Create a new Trip</DialogTitle>\r\n        <DialogContent>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"title\"\r\n                value={tripName}\r\n                onChange={handleChange}\r\n                label=\"Create a Trip\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LuggageIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={newTripSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTripForm;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\ProfileCard\\index.jsx",["302"],[],"D:\\Itinerary Planner\\frontend\\src\\components\\PlaceMarker\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\AddTripCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\NewTripPopUp\\index.jsx",["303"],[],"import { useState } from \"react\";\r\nimport { createPlace } from \"../../services/placesWs\";\r\nimport { createTrip } from \"../../services/tripsWs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport LuggageIcon from \"@mui/icons-material/Luggage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst NewTripPopUp = ({\r\n  place,\r\n  open,\r\n  setOpen,\r\n  tripId,\r\n  setTripId,\r\n  ...props\r\n}) => {\r\n  const [error, setError] = useState(null);\r\n  const [tripName, setTripName] = useState(\"\");\r\n  const [isDisable, setIsDisable] = useState(false);\r\n  const [notCreated, setNotCreated] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTripName(value);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const newTripSavePlace = async () => {\r\n    const newTrip = {\r\n      title: tripName,\r\n    };\r\n\r\n    createTrip(newTrip)\r\n      .then((response) => {\r\n        setTripId(response.data.trip._id);\r\n        setIsDisable(true);\r\n        setNotCreated(null);\r\n        props.updateTrip(response.data.trip);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  const savePlace = () => {\r\n    const newPlace = {\r\n      name: place.name,\r\n      placeImages: place.photo.images.large.url,\r\n      address: place.address_obj.street1,\r\n      rating: place.rating,\r\n      lat: place.latitude,\r\n      lng: place.longitude,\r\n      apiLocationId: place.location_id,\r\n      _trip: tripId,\r\n    };\r\n\r\n    createPlace(newPlace)\r\n      .then((response) => {\r\n        if (!response.status) {\r\n          setNotCreated(response);\r\n        } else {\r\n          setOpen(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Create a new Trip</DialogTitle>\r\n        <DialogContent>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"title\"\r\n                value={tripName}\r\n                disabled={isDisable}\r\n                onChange={handleChange}\r\n                label=\"Create Trip\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LuggageIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n            <IconButton\r\n              aria-label=\"add\"\r\n              color=\"primary\"\r\n              onClick={newTripSavePlace}\r\n            >\r\n              <AddCircleIcon />\r\n            </IconButton>\r\n          </Stack>\r\n          <Typography variant=\"body2\" color=\"error\">\r\n            {notCreated && <p>Please save the trip first (+)</p>}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={savePlace}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTripPopUp;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\HomeAddCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\EditTripPopUp\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\NoPlacesFound\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\DestinationCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\SavePlacePopUp\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\ChangePasswordForm\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Auth\\index.jsx",["304"],[],"import Container from \"@mui/material/Container\";\r\nimport { Login, SignUp } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nexport default function Auth(props) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isLoginPage = location.pathname === \"/login\";\r\n\r\n  const isAuthenticated = () => {\r\n    getUserWS().then((response) => {\r\n      if (response.status) {\r\n        navigate(\"/mytrips\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    isAuthenticated();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper sx={{pb: 3}}>\r\n          {isLoginPage ? <Login authenticate={props.authenticate}/> : <SignUp authenticate={props.authenticate} />}\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\Profile\\index.jsx",["305"],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Explore\\index.jsx",["306"],[],"import \"./Explore.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getPlaces } from \"../../api/TravelAPI\";\r\nimport { PlacesList, Map, SearchBox, Filters } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\n// Material UI\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction Explore({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  const [coordinates, setCoordinates] = useState({});\r\n  // Map Limits (NorthEast and SouthWest)\r\n  const [limits, setLimits] = useState();\r\n  // Places list\r\n  const [places, setPlaces] = useState([]);\r\n  // To use for filter places\r\n  const [type, setType] = useState(\"attractions\");\r\n  const [rating, setRating] = useState(3);\r\n  // Loading Control\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (response.status) {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  const defaultGeoLocation = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const destinationFromHome = location.state; // Check Location State\r\n      if (destinationFromHome) {\r\n        const destinationCoordinates =\r\n          destinationFromHome.destinationCoordinates; // Get Destination coordinates\r\n        setCoordinates({\r\n          lat: destinationCoordinates.lat,\r\n          lng: destinationCoordinates.lng,\r\n        });\r\n        setIsLoading(false);\r\n      } else {\r\n        const defaultCoords = { lat: 48.856614, lng: 2.3522219 }; // \"Paris, France\" as default\r\n        setCoordinates(defaultCoords);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    defaultGeoLocation();\r\n    verifyUser();\r\n  }, []);\r\n\r\n  // Get places from API\r\n  useEffect(() => {\r\n    if (limits) {\r\n      setLoadingPlaces(true);\r\n      getPlaces(type, limits.sw, limits.ne).then((data) => {\r\n        const places = data.filter(\r\n          (place) => place.name && place.rating > rating\r\n        );\r\n        setPlaces(places);\r\n        setLoadingPlaces(false);\r\n      });\r\n    }\r\n  }, [limits, type, rating]);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          container\r\n          className=\"search-filter-grid\"\r\n          spacing={2}\r\n          sx={{ ml: 9 }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            mt={1}\r\n            className=\"search-box-grid\"\r\n            sx={{ width: 300, mt: 2, pr: 2 }}\r\n          >\r\n            <SearchBox setCoordinates={setCoordinates} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            mt={1}\r\n            className=\"filter-explore-grid\"\r\n            sx={{ justifyContent: \"center\" }}\r\n          >\r\n            <Filters\r\n              type={type}\r\n              setType={setType}\r\n              rating={rating}\r\n              setRating={setRating}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          mt={1}\r\n          style={{ maxHeight: \"75vh\", overflow: \"auto\" }}\r\n        >\r\n          <PlacesList\r\n            loadingPlaces={loadingPlaces}\r\n            places={places}\r\n            user={user}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          className=\"map-grid\"\r\n          style={{ maxHeight: \"100%\" }}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            {!isLoading && (\r\n              <Map\r\n                coordinates={coordinates}\r\n                setLimits={setLimits}\r\n                setCoordinates={setCoordinates}\r\n                places={places}\r\n                zoom={14}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\AroundMe\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Home\\index.jsx",["307"],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\MyTrips\\index.jsx",["308","309"],[],"import \"./MyTrips.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getAllTrips } from \"../../services/tripsWs\";\r\nimport { TripCard, AddTripCard } from \"../../components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nfunction MyTrips({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userTrips, setUserTrips] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Validate if user is logged in (JWT)\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (!response.status) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  // Get all trips from user\r\n  const findUserTrips = async () => {\r\n    const haveTrips = await getAllTrips();\r\n    if (haveTrips) {\r\n      setUserTrips(haveTrips.data.trips);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n    findUserTrips();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        maxWidth=\"lg\"\r\n        className=\"mytrips-container\"\r\n        sx={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n      >\r\n        {!isLoading && userTrips.length > 0 ? (\r\n          <>\r\n            {userTrips.map((trip, i) => (\r\n              <TripCard key={i} trip={trip} />\r\n            ))}\r\n            <AddTripCard />\r\n          </>\r\n        ) : (\r\n          <AddTripCard />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyTrips;\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\ChangePassword\\index.jsx",["310"],[],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport { ChangePasswordForm } from \"../../components\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst ChangePassword = ({ props }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Validate if user is logged in (JWT)\r\n  const verifyUser = async () => {\r\n    setIsLoading(true);\r\n    const response = await getUserWS();\r\n    if (!response.status) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setUser(response.data.user);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <>\r\n          <Grid container spacing={2} sx={{ justifyContent: \"center\" }}>\r\n            <ChangePasswordForm user={user} />\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","D:\\Itinerary Planner\\frontend\\src\\services\\tripsWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\MyPlaces\\index.jsx",["311"],[],"import \"./MyPlaces.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getOneTrip, getAllPlacesFromTrip } from \"../../services/tripsWs\";\r\nimport { PlacesList, MapPlaces } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nfunction MyPlaces({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  // Map\r\n  const [coordinates, setCoordinates] = useState({});\r\n  // Places from trip\r\n  const [places, setPlaces] = useState([]);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n  // Trip Details\r\n  const [trip, setTrip] = useState({});\r\n  // Loading Control\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (response.status) {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  const getTripAndPlaces = async () => {\r\n    setIsLoading(true);\r\n    setLoadingPlaces(true);\r\n    try {\r\n      const trip = await getOneTrip(id); // For use it as title\r\n      if (trip) {\r\n        setTrip(trip.data.trip);\r\n      }\r\n      const placesInTrip = await getAllPlacesFromTrip(id); // For use it as places\r\n      if (placesInTrip) {\r\n        setPlaces(placesInTrip.data.places);\r\n        setCoordinates({\r\n          lat: placesInTrip.data.places[0].lat,\r\n          lng: placesInTrip.data.places[0].lng,\r\n        });\r\n        setIsLoading(false);\r\n        setIsSaved(true); // To display delete button in place card\r\n      } else {\r\n        navigate(\"/mytrips\");\r\n      }\r\n      setIsLoading(false);\r\n      setLoadingPlaces(false);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTripAndPlaces();\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container spacing={2} className=\"myplaces-grid\">\r\n        <Grid item xs={12} md={12} className=\"search-box-grid\">\r\n          <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n            {trip.title}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          mt={1}\r\n          style={{ maxHeight: \"80vh\", overflow: \"auto\" }}\r\n        >\r\n          <PlacesList\r\n            loadingPlaces={loadingPlaces}\r\n            places={places}\r\n            user={user}\r\n            isSaved={isSaved}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          className=\"map-grid\"\r\n          style={{ maxHeight: \"100%\" }}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            {!isLoading && (\r\n              <MapPlaces coordinates={coordinates} places={places} zoom={12} />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPlaces;\r\n","D:\\Itinerary Planner\\frontend\\src\\services\\uploadWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\services\\placesWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\PlaceCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\WeatherAPI.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\TravelAPI.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\GeoLocationAPI.js",[],[],["312","313"],"D:\\Itinerary Planner\\frontend\\src\\pages\\ContactUs\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\AboutUs\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Weather\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\WeatherSearchBox\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Subtitle\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\ServiceList\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\ServiceList\\ServiceCard.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Footer\\index.jsx",[],[],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":4,"column":10,"nodeType":"320","messageId":"321","endLine":4,"endColumn":16},{"ruleId":"318","severity":1,"message":"322","line":6,"column":9,"nodeType":"320","messageId":"321","endLine":6,"endColumn":14},{"ruleId":"318","severity":1,"message":"323","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":17},{"ruleId":"324","severity":1,"message":"325","line":30,"column":6,"nodeType":"326","endLine":30,"endColumn":20,"suggestions":"327"},{"ruleId":"318","severity":1,"message":"328","line":7,"column":16,"nodeType":"320","messageId":"321","endLine":7,"endColumn":23},{"ruleId":"318","severity":1,"message":"329","line":3,"column":18,"nodeType":"320","messageId":"321","endLine":3,"endColumn":26},{"ruleId":"318","severity":1,"message":"330","line":5,"column":3,"nodeType":"320","messageId":"321","endLine":5,"endColumn":6},{"ruleId":"318","severity":1,"message":"331","line":13,"column":3,"nodeType":"320","messageId":"321","endLine":13,"endColumn":13},{"ruleId":"318","severity":1,"message":"332","line":19,"column":8,"nodeType":"320","messageId":"321","endLine":19,"endColumn":20},{"ruleId":"324","severity":1,"message":"333","line":48,"column":6,"nodeType":"326","endLine":48,"endColumn":8,"suggestions":"334"},{"ruleId":"318","severity":1,"message":"335","line":15,"column":10,"nodeType":"320","messageId":"321","endLine":15,"endColumn":15},{"ruleId":"318","severity":1,"message":"336","line":29,"column":9,"nodeType":"320","messageId":"321","endLine":29,"endColumn":17},{"ruleId":"318","severity":1,"message":"335","line":26,"column":10,"nodeType":"320","messageId":"321","endLine":26,"endColumn":15},{"ruleId":"324","severity":1,"message":"337","line":23,"column":6,"nodeType":"326","endLine":23,"endColumn":8,"suggestions":"338"},{"ruleId":"324","severity":1,"message":"339","line":27,"column":6,"nodeType":"326","endLine":27,"endColumn":8,"suggestions":"340"},{"ruleId":"324","severity":1,"message":"341","line":60,"column":6,"nodeType":"326","endLine":60,"endColumn":8,"suggestions":"342"},{"ruleId":"324","severity":1,"message":"343","line":41,"column":6,"nodeType":"326","endLine":41,"endColumn":19,"suggestions":"344"},{"ruleId":"318","severity":1,"message":"345","line":10,"column":10,"nodeType":"320","messageId":"321","endLine":10,"endColumn":14},{"ruleId":"324","severity":1,"message":"339","line":38,"column":6,"nodeType":"326","endLine":38,"endColumn":8,"suggestions":"346"},{"ruleId":"324","severity":1,"message":"339","line":27,"column":6,"nodeType":"326","endLine":27,"endColumn":8,"suggestions":"347"},{"ruleId":"324","severity":1,"message":"348","line":66,"column":6,"nodeType":"326","endLine":66,"endColumn":8,"suggestions":"349"},{"ruleId":"314","replacedBy":"350"},{"ruleId":"316","replacedBy":"351"},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'index' is defined but never used.","'CardMedia' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formatDate'. Either include it or remove the dependency array.","ArrayExpression",["354"],"'setOpen' is assigned a value but never used.","'useTheme' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'TravelfyLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'placesFromTrip'. Either include it or remove the dependency array.",["355"],"'error' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["356"],"React Hook useEffect has a missing dependency: 'verifyUser'. Either include it or remove the dependency array.",["357"],"React Hook useEffect has a missing dependency: 'defaultGeoLocation'. Either include it or remove the dependency array.",["358"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["359"],"'user' is assigned a value but never used.",["360"],["361"],"React Hook useEffect has a missing dependency: 'getTripAndPlaces'. Either include it or remove the dependency array.",["362"],["352"],["353"],"no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"369","fix":"375"},{"desc":"369","fix":"376"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [day.datetime, formatDate]",{"range":"379","text":"380"},"Update the dependencies array to be: [placesFromTrip]",{"range":"381","text":"382"},"Update the dependencies array to be: [isAuthenticated]",{"range":"383","text":"384"},"Update the dependencies array to be: [verifyUser]",{"range":"385","text":"386"},"Update the dependencies array to be: [defaultGeoLocation]",{"range":"387","text":"388"},"Update the dependencies array to be: [coordinates, handleSearch]",{"range":"389","text":"390"},{"range":"391","text":"386"},{"range":"392","text":"386"},"Update the dependencies array to be: [getTripAndPlaces]",{"range":"393","text":"394"},[1204,1218],"[day.datetime, formatDate]",[1452,1454],"[placesFromTrip]",[671,673],"[isAuthenticated]",[743,745],"[verifyUser]",[1982,1984],"[defaultGeoLocation]",[1267,1280],"[coordinates, handleSearch]",[1083,1085],[757,759],[2065,2067],"[getTripAndPlaces]"]