[{"D:\\Itinerary Planner\\frontend\\src\\index.js":"1","D:\\Itinerary Planner\\frontend\\src\\reportWebVitals.js":"2","D:\\Itinerary Planner\\frontend\\src\\App.js":"3","D:\\Itinerary Planner\\frontend\\src\\RootNavigation.js":"4","D:\\Itinerary Planner\\frontend\\src\\services\\authWs.js":"5","D:\\Itinerary Planner\\frontend\\src\\components\\index.js":"6","D:\\Itinerary Planner\\frontend\\src\\api\\ServerAPI.js":"7","D:\\Itinerary Planner\\frontend\\src\\utils\\clear-res.js":"8","D:\\Itinerary Planner\\frontend\\src\\pages\\index.js":"9","D:\\Itinerary Planner\\frontend\\src\\components\\Map\\MapPlaces.jsx":"10","D:\\Itinerary Planner\\frontend\\src\\components\\Map\\index.jsx":"11","D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCardIntro\\index.js":"12","D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCard\\index.js":"13","D:\\Itinerary Planner\\frontend\\src\\components\\Login\\index.jsx":"14","D:\\Itinerary Planner\\frontend\\src\\components\\Loader\\index.jsx":"15","D:\\Itinerary Planner\\frontend\\src\\components\\Navbar\\index.jsx":"16","D:\\Itinerary Planner\\frontend\\src\\components\\Filters\\index.jsx":"17","D:\\Itinerary Planner\\frontend\\src\\components\\SignUp\\index.jsx":"18","D:\\Itinerary Planner\\frontend\\src\\components\\TripCard\\index.jsx":"19","D:\\Itinerary Planner\\frontend\\src\\components\\SearchBox\\index.jsx":"20","D:\\Itinerary Planner\\frontend\\src\\components\\PlacesList\\index.jsx":"21","D:\\Itinerary Planner\\frontend\\src\\components\\NewTripForm\\index.jsx":"22","D:\\Itinerary Planner\\frontend\\src\\components\\ProfileCard\\index.jsx":"23","D:\\Itinerary Planner\\frontend\\src\\components\\PlaceMarker\\index.jsx":"24","D:\\Itinerary Planner\\frontend\\src\\components\\AddTripCard\\index.jsx":"25","D:\\Itinerary Planner\\frontend\\src\\components\\NewTripPopUp\\index.jsx":"26","D:\\Itinerary Planner\\frontend\\src\\components\\HomeAddCard\\index.jsx":"27","D:\\Itinerary Planner\\frontend\\src\\components\\EditTripPopUp\\index.jsx":"28","D:\\Itinerary Planner\\frontend\\src\\components\\NoPlacesFound\\index.jsx":"29","D:\\Itinerary Planner\\frontend\\src\\components\\DestinationCard\\index.jsx":"30","D:\\Itinerary Planner\\frontend\\src\\components\\SavePlacePopUp\\index.jsx":"31","D:\\Itinerary Planner\\frontend\\src\\components\\ChangePasswordForm\\index.jsx":"32","D:\\Itinerary Planner\\frontend\\src\\pages\\Auth\\index.jsx":"33","D:\\Itinerary Planner\\frontend\\src\\pages\\Profile\\index.jsx":"34","D:\\Itinerary Planner\\frontend\\src\\pages\\Weather\\index.jsx":"35","D:\\Itinerary Planner\\frontend\\src\\pages\\Explore\\index.jsx":"36","D:\\Itinerary Planner\\frontend\\src\\pages\\AroundMe\\index.jsx":"37","D:\\Itinerary Planner\\frontend\\src\\pages\\Home\\index.jsx":"38","D:\\Itinerary Planner\\frontend\\src\\pages\\MyTrips\\index.jsx":"39","D:\\Itinerary Planner\\frontend\\src\\pages\\ChangePassword\\index.jsx":"40","D:\\Itinerary Planner\\frontend\\src\\services\\tripsWs.js":"41","D:\\Itinerary Planner\\frontend\\src\\pages\\MyPlaces\\index.jsx":"42","D:\\Itinerary Planner\\frontend\\src\\services\\uploadWs.js":"43","D:\\Itinerary Planner\\frontend\\src\\services\\placesWs.js":"44","D:\\Itinerary Planner\\frontend\\src\\components\\PlaceCard\\index.jsx":"45","D:\\Itinerary Planner\\frontend\\src\\api\\WeatherAPI.js":"46","D:\\Itinerary Planner\\frontend\\src\\api\\TravelAPI.js":"47","D:\\Itinerary Planner\\frontend\\src\\api\\GeoLocationAPI.js":"48"},{"size":613,"mtime":1718596309356,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1718596309363,"results":"51","hashOfConfig":"50"},{"size":811,"mtime":1718596309330,"results":"52","hashOfConfig":"50"},{"size":1116,"mtime":1718596309371,"results":"53","hashOfConfig":"50"},{"size":1420,"mtime":1718596310158,"results":"54","hashOfConfig":"50"},{"size":1281,"mtime":1718596309611,"results":"55","hashOfConfig":"50"},{"size":311,"mtime":1718596309395,"results":"56","hashOfConfig":"50"},{"size":473,"mtime":1718596310193,"results":"57","hashOfConfig":"50"},{"size":447,"mtime":1718596310000,"results":"58","hashOfConfig":"50"},{"size":1021,"mtime":1718596309762,"results":"59","hashOfConfig":"50"},{"size":1198,"mtime":1718596309747,"results":"60","hashOfConfig":"50"},{"size":942,"mtime":1719044215485,"results":"61","hashOfConfig":"50"},{"size":3424,"mtime":1719044179299,"results":"62","hashOfConfig":"50"},{"size":3074,"mtime":1719134694087,"results":"63","hashOfConfig":"50"},{"size":523,"mtime":1718596309708,"results":"64","hashOfConfig":"50"},{"size":4729,"mtime":1719134628497,"results":"65","hashOfConfig":"50"},{"size":1631,"mtime":1718596309680,"results":"66","hashOfConfig":"50"},{"size":3764,"mtime":1718894961663,"results":"67","hashOfConfig":"50"},{"size":3819,"mtime":1718596309949,"results":"68","hashOfConfig":"50"},{"size":1266,"mtime":1719044147523,"results":"69","hashOfConfig":"50"},{"size":1369,"mtime":1718596309871,"results":"70","hashOfConfig":"50"},{"size":2362,"mtime":1718596309793,"results":"71","hashOfConfig":"50"},{"size":5985,"mtime":1718596309891,"results":"72","hashOfConfig":"50"},{"size":923,"mtime":1718596309851,"results":"73","hashOfConfig":"50"},{"size":1601,"mtime":1718596309629,"results":"74","hashOfConfig":"50"},{"size":3811,"mtime":1718596309803,"results":"75","hashOfConfig":"50"},{"size":1902,"mtime":1718596309698,"results":"76","hashOfConfig":"50"},{"size":5449,"mtime":1718596309662,"results":"77","hashOfConfig":"50"},{"size":831,"mtime":1718596309814,"results":"78","hashOfConfig":"50"},{"size":1142,"mtime":1718596309651,"results":"79","hashOfConfig":"50"},{"size":5769,"mtime":1718596309901,"results":"80","hashOfConfig":"50"},{"size":6449,"mtime":1718596309641,"results":"81","hashOfConfig":"50"},{"size":935,"mtime":1718596310028,"results":"82","hashOfConfig":"50"},{"size":2262,"mtime":1719134868385,"results":"83","hashOfConfig":"50"},{"size":2240,"mtime":1719134756838,"results":"84","hashOfConfig":"50"},{"size":4133,"mtime":1718596310059,"results":"85","hashOfConfig":"50"},{"size":18755,"mtime":1719134644017,"results":"86","hashOfConfig":"50"},{"size":3451,"mtime":1718596310077,"results":"87","hashOfConfig":"50"},{"size":1586,"mtime":1718596310109,"results":"88","hashOfConfig":"50"},{"size":1038,"mtime":1718596310040,"results":"89","hashOfConfig":"50"},{"size":1468,"mtime":1718596310173,"results":"90","hashOfConfig":"50"},{"size":3132,"mtime":1718596310089,"results":"91","hashOfConfig":"50"},{"size":259,"mtime":1718596310180,"results":"92","hashOfConfig":"50"},{"size":1213,"mtime":1718596310165,"results":"93","hashOfConfig":"50"},{"size":5769,"mtime":1718596309833,"results":"94","hashOfConfig":"50"},{"size":518,"mtime":1719118424507,"results":"95","hashOfConfig":"50"},{"size":717,"mtime":1719047985526,"results":"96","hashOfConfig":"50"},{"size":364,"mtime":1719049480556,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"10a7yj",{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"101"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"101"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"101"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"101"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"101"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"101"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"101"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"101"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"101"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"D:\\Itinerary Planner\\frontend\\src\\index.js",[],[],["255","256"],"D:\\Itinerary Planner\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\App.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\RootNavigation.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\services\\authWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\index.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\ServerAPI.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\utils\\clear-res.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\index.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Map\\MapPlaces.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Map\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCardIntro\\index.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\WeatherCard\\index.js",["257"],[],"import \"./WeatherCard.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport ThermostatOutlinedIcon from \"@mui/icons-material/ThermostatOutlined\";\r\nimport ModeNightIcon from \"@mui/icons-material/ModeNight\";\r\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\r\nimport WaterIcon from \"@mui/icons-material/Water\";\r\n\r\nconst WeatherCard = ({ day, i }) => {\r\n  const [dateOfDay, setDateOfDay] = useState(day.date);\r\n\r\n  const formatDate = () => {\r\n    const date = new Date(day.dt * 1000);\r\n    const dayOfWeek = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\r\n    const month = date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n    const dayOfMonth = date.getDate();\r\n    const year = date.getFullYear();\r\n    const dateFormatted = `${dayOfWeek}, ${dayOfMonth} ${month} ${year}`;\r\n    setDateOfDay(dateFormatted);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formatDate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card sx={{ width: 215, maxWidth: 215, maxHeight: 315, m: 0.5, my:1 }} elevation={3}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"subtitle2\" component=\"div\">\r\n            {dateOfDay}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              width: 60,\r\n              justifyContent: \"center\",\r\n              ml: 7,\r\n            }}\r\n            className=\"weather-icon-box\"\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"60\"\r\n              image={`https://openweathermap.org/img/w/${day.weather[0].icon}.png`}\r\n              alt=\"green iguana\"\r\n            />\r\n          </Box>\r\n          <Divider>\r\n            <Typography variant=\"caption\" gutterBottom>\r\n              {day.weather.map((weather) => (\r\n                <Chip label={weather.description} />\r\n              ))}\r\n            </Typography>\r\n          </Divider>\r\n          <Box\r\n            sx={{\r\n              width: 170,\r\n              my: 1,\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle2\">\r\n              <ThermostatOutlinedIcon fontSize=\"small\" color=\"disabled\" /> Temp.\r\n              <Typography variant=\"caption\"> {day.temp.day}ºC</Typography>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              <WaterIcon fontSize=\"small\" color=\"disabled\" /> Feels Like:\r\n              <Typography variant=\"caption\"> {day.feels_like.day}ºC</Typography>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              <WbSunnyIcon fontSize=\"small\" color=\"disabled\" /> Max Temp:\r\n              <Typography variant=\"caption\"> {day.temp.max}ºC</Typography>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              <ModeNightIcon fontSize=\"small\" color=\"disabled\" /> Night Temp.:\r\n              <Typography variant=\"caption\"> {day.temp.night}ºC</Typography>\r\n            </Typography>\r\n          </Box>\r\n          <Chip\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            label={`Humidity: ${day.humidity}%`}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\Login\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Loader\\index.jsx",["258"],[],"import './Loader.css'\r\nimport { useState } from \"react\";\r\nimport BackdropUnstyled from '@mui/base/BackdropUnstyled';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst Loader = () => {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <BackdropUnstyled\r\n      sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      open={open} className=\"place-list-loader\"\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n    </BackdropUnstyled>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\Navbar\\index.jsx",["259","260","261","262"],[],"D:\\Itinerary Planner\\frontend\\src\\components\\Filters\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\SignUp\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\TripCard\\index.jsx",["263"],[],"import \"./TripCard.css\";\r\nimport {\r\n  TwitterIcon,\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n} from \"react-share\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteTrip, getAllPlacesFromTrip } from \"../../services/tripsWs\";\r\nimport EditTripPopUp from \"../EditTripPopUp\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nconst TripCard = ({ trip }) => {\r\n  const [places, setPlaces] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const shareUrl = `http://travelfy.netlify.app/trips/share/${trip._id}/places`;\r\n\r\n  const placesFromTrip = async () => {\r\n    const havePlaces = await getAllPlacesFromTrip(trip._id);\r\n    if (havePlaces) {\r\n      setPlaces(havePlaces.data.places);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteTrip(trip._id);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    placesFromTrip();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Card sx={{ width: 250, maxWidth: 275 }} className=\"trip-card-wrapper\">\r\n        {places.length > 0 ? (\r\n          <Link\r\n            to={`/trips/${trip._id}/places`}\r\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n          >\r\n            <CardHeader title={trip.title} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={trip.tripImage}\r\n              alt=\"travelfy\"\r\n            />\r\n          </Link>\r\n        ) : (\r\n          <>\r\n            <CardHeader title={trip.title} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={trip.tripImage}\r\n              alt=\"travelfy\"\r\n            />\r\n          </>\r\n        )}\r\n        <CardContent className=\"card-content-wrapper\">\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {trip.description}\r\n          </Typography>\r\n          <div className=\"social-share-div\">\r\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n              Share on:\r\n            </Typography>\r\n            <TwitterShareButton\r\n              url={shareUrl}\r\n              title={`This is my travel list \"${trip.title}\" @Travelfy`}\r\n            >\r\n              <TwitterIcon size={29} round={true} />\r\n            </TwitterShareButton>\r\n            <FacebookShareButton\r\n              url={shareUrl}\r\n              quote={`This is my travel list \"${trip.title}\" @Travelfy`}\r\n            >\r\n              <FacebookIcon size={29} round={true} />\r\n            </FacebookShareButton>\r\n            <WhatsappShareButton\r\n              url={shareUrl}\r\n              title={`This is my travel list \"${trip.title}\" @Travelfy`}\r\n            >\r\n              <WhatsappIcon size={29} round={true} m={1} />\r\n            </WhatsappShareButton>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions disableSpacing className=\"new-trip-actions\">\r\n          <IconButton aria-label=\"edit\" onClick={handleClickOpen}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <EditTripPopUp trip={trip} open={open} setOpen={setOpen} />\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TripCard;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\SearchBox\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\PlacesList\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\NewTripForm\\index.jsx",["264"],[],"import { useState } from \"react\";\r\nimport { createTrip } from \"../../services/tripsWs\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport LuggageIcon from \"@mui/icons-material/Luggage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nconst NewTripForm = ({ open, setOpen, ...props }) => {\r\n  const [error, setError] = useState(null);\r\n  const [tripName, setTripName] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTripName(value);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const newTripSave = async () => {\r\n    const newTrip = {\r\n      title: tripName,\r\n    };\r\n\r\n    createTrip(newTrip)\r\n      .then((response) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Create a new Trip</DialogTitle>\r\n        <DialogContent>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"title\"\r\n                value={tripName}\r\n                onChange={handleChange}\r\n                label=\"Create a Trip\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LuggageIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={newTripSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTripForm;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\ProfileCard\\index.jsx",["265"],[],"import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { updateUserWS } from \"../../services/authWs\";\r\nimport { uploadWs } from \"../../services/uploadWs\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\n\r\nconst ProfileCard = ({ user, ...props }) => {\r\n  const [values, setValues] = useState({\r\n    email: user.email,\r\n    username: user.username,\r\n    profilePic: user.profilePic,\r\n    firstName: user.firstName,\r\n    lastName: user.lastName,\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const Input = styled(\"input\")({\r\n    display: \"none\",\r\n  });\r\n\r\n  // Set state on profile changes\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setMessage(null); // Clear message\r\n    setError(null); // Clear error\r\n  };\r\n\r\n  // Profile Image Upload\r\n  const handleUpload = async (e) => {\r\n    const image = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"images\", image);\r\n    uploadWs(formData)\r\n      .then((res) => {\r\n        setValues({\r\n          ...values,\r\n          profilePic: res.data.result.newPath.url,\r\n        });\r\n        setMessage(res.data.msg);\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n      });\r\n  };\r\n\r\n  // Save Changes to User Profile\r\n  const handleFormSubmission = (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      updateUserWS(values).then((response) => {\r\n        if (response.status) {\r\n          setMessage(\"Profile updated successfully\");\r\n          setError(null);\r\n          setTimeout(() => {\r\n            window.location.reload();\r\n          }, 3000);\r\n        } else {\r\n          setError(response.errorMessage);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      setError(error.errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          maxWidth: 400,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          mt: 5,\r\n        }}\r\n      >\r\n        <Paper sx={{ maxWidth: 400 }}>\r\n          <form onSubmit={handleFormSubmission}>\r\n            <AccountCircleIcon\r\n              fontSize=\"large\"\r\n              color=\"primary\"\r\n              sx={{ mt: 3 }}\r\n            />\r\n            <Typography\r\n              variant=\"h5\"\r\n              gutterBottom\r\n              component=\"div\"\r\n              sx={{ mb: 3 }}\r\n            >\r\n              Profile\r\n            </Typography>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"email\"\r\n              name=\"email\"\r\n              defaultValue={user.email}\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              sx={{ width: \"300px\", mb: 2 }}\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              defaultValue={user.username}\r\n              onChange={handleChange}\r\n              variant=\"outlined\"\r\n              sx={{ width: \"300px\", mb: 2 }}\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              defaultValue={user.firstName}\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              sx={{ width: \"300px\", mb: 2 }}\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              defaultValue={user.lastName}\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              sx={{ width: \"300px\", mb: 2 }}\r\n            />\r\n            <div>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <Avatar\r\n                    alt=\"Travelfy User\"\r\n                    src={values.profilePic}\r\n                    className=\"avatar-div\"\r\n                    sx={{ alignSelf: \"center\" }}\r\n                  />\r\n                </div>\r\n                <label htmlFor=\"icon-button-file\">\r\n                  <Input\r\n                    accept=\"image/*\"\r\n                    id=\"icon-button-file\"\r\n                    name=\"profilePic\"\r\n                    type=\"file\"\r\n                    onChange={handleUpload}\r\n                  />\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"upload picture\"\r\n                    component=\"span\"\r\n                    sx={{ mb: 2 }}\r\n                  >\r\n                    <PhotoCamera />\r\n                  </IconButton>\r\n                </label>\r\n              </Box>\r\n            </div>\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Save\r\n            </Button>\r\n            {error ? (\r\n              <Box sx={{ m: 2 }}>\r\n                <Typography variant=\"body2\" color=\"error\">\r\n                  {error}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{ m: 2 }}>\r\n                <Typography variant=\"body2\" color=\"primary\">\r\n                  {message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\PlaceMarker\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\AddTripCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\NewTripPopUp\\index.jsx",["266"],[],"import { useState } from \"react\";\r\nimport { createPlace } from \"../../services/placesWs\";\r\nimport { createTrip } from \"../../services/tripsWs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport LuggageIcon from \"@mui/icons-material/Luggage\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst NewTripPopUp = ({\r\n  place,\r\n  open,\r\n  setOpen,\r\n  tripId,\r\n  setTripId,\r\n  ...props\r\n}) => {\r\n  const [error, setError] = useState(null);\r\n  const [tripName, setTripName] = useState(\"\");\r\n  const [isDisable, setIsDisable] = useState(false);\r\n  const [notCreated, setNotCreated] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setTripName(value);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const newTripSavePlace = async () => {\r\n    const newTrip = {\r\n      title: tripName,\r\n    };\r\n\r\n    createTrip(newTrip)\r\n      .then((response) => {\r\n        setTripId(response.data.trip._id);\r\n        setIsDisable(true);\r\n        setNotCreated(null);\r\n        props.updateTrip(response.data.trip);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  const savePlace = () => {\r\n    const newPlace = {\r\n      name: place.name,\r\n      placeImages: place.photo.images.large.url,\r\n      address: place.address_obj.street1,\r\n      rating: place.rating,\r\n      lat: place.latitude,\r\n      lng: place.longitude,\r\n      apiLocationId: place.location_id,\r\n      _trip: tripId,\r\n    };\r\n\r\n    createPlace(newPlace)\r\n      .then((response) => {\r\n        if (!response.status) {\r\n          setNotCreated(response);\r\n        } else {\r\n          setOpen(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n        <DialogTitle>Create a new Trip</DialogTitle>\r\n        <DialogContent>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"title\"\r\n                value={tripName}\r\n                disabled={isDisable}\r\n                onChange={handleChange}\r\n                label=\"Create Trip\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LuggageIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n            <IconButton\r\n              aria-label=\"add\"\r\n              color=\"primary\"\r\n              onClick={newTripSavePlace}\r\n            >\r\n              <AddCircleIcon />\r\n            </IconButton>\r\n          </Stack>\r\n          <Typography variant=\"body2\" color=\"error\">\r\n            {notCreated && <p>Please save the trip first (+)</p>}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={savePlace}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTripPopUp;\r\n","D:\\Itinerary Planner\\frontend\\src\\components\\HomeAddCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\EditTripPopUp\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\NoPlacesFound\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\DestinationCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\SavePlacePopUp\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\ChangePasswordForm\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Auth\\index.jsx",["267"],[],"import Container from \"@mui/material/Container\";\r\nimport { Login, SignUp } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nexport default function Auth(props) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isLoginPage = location.pathname === \"/login\";\r\n\r\n  const isAuthenticated = () => {\r\n    getUserWS().then((response) => {\r\n      if (response.status) {\r\n        navigate(\"/mytrips\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    isAuthenticated();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <Paper sx={{pb: 3}}>\r\n          {isLoginPage ? <Login authenticate={props.authenticate}/> : <SignUp authenticate={props.authenticate} />}\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\Profile\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Weather\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Explore\\index.jsx",["268"],[],"import \"./Explore.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getPlaces } from \"../../api/TravelAPI\";\r\nimport { PlacesList, Map, SearchBox, Filters } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\n// Material UI\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction Explore({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  const [coordinates, setCoordinates] = useState({});\r\n  // Map Limits (NorthEast and SouthWest)\r\n  const [limits, setLimits] = useState();\r\n  // Places list\r\n  const [places, setPlaces] = useState([]);\r\n  // To use for filter places\r\n  const [type, setType] = useState(\"attractions\");\r\n  const [rating, setRating] = useState(3);\r\n  // Loading Control\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (response.status) {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  const defaultGeoLocation = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const destinationFromHome = location.state; // Check Location State\r\n      if (destinationFromHome) {\r\n        const destinationCoordinates =\r\n          destinationFromHome.destinationCoordinates; // Get Destination coordinates\r\n        setCoordinates({\r\n          lat: destinationCoordinates.lat,\r\n          lng: destinationCoordinates.lng,\r\n        });\r\n        setIsLoading(false);\r\n      } else {\r\n        const defaultCoords = { lat: 48.856614, lng: 2.3522219 }; // \"Paris, France\" as default\r\n        setCoordinates(defaultCoords);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    defaultGeoLocation();\r\n    verifyUser();\r\n  }, []);\r\n\r\n  // Get places from API\r\n  useEffect(() => {\r\n    if (limits) {\r\n      setLoadingPlaces(true);\r\n      getPlaces(type, limits.sw, limits.ne).then((data) => {\r\n        const places = data.filter(\r\n          (place) => place.name && place.rating > rating\r\n        );\r\n        setPlaces(places);\r\n        setLoadingPlaces(false);\r\n      });\r\n    }\r\n  }, [limits, type, rating]);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          container\r\n          className=\"search-filter-grid\"\r\n          spacing={2}\r\n          sx={{ ml: 9 }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            mt={1}\r\n            className=\"search-box-grid\"\r\n            sx={{ width: 300, mt: 2, pr: 2 }}\r\n          >\r\n            <SearchBox setCoordinates={setCoordinates} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            mt={1}\r\n            className=\"filter-explore-grid\"\r\n            sx={{ justifyContent: \"center\" }}\r\n          >\r\n            <Filters\r\n              type={type}\r\n              setType={setType}\r\n              rating={rating}\r\n              setRating={setRating}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          mt={1}\r\n          style={{ maxHeight: \"75vh\", overflow: \"auto\" }}\r\n        >\r\n          <PlacesList\r\n            loadingPlaces={loadingPlaces}\r\n            places={places}\r\n            user={user}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          className=\"map-grid\"\r\n          style={{ maxHeight: \"100%\" }}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            {!isLoading && (\r\n              <Map\r\n                coordinates={coordinates}\r\n                setLimits={setLimits}\r\n                setCoordinates={setCoordinates}\r\n                places={places}\r\n                zoom={14}\r\n              />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\AroundMe\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\Home\\index.jsx",["269"],[],"import \"./Home.css\";\r\nimport jsonData from \"../../assets/destinations.json\";\r\nimport jsonQuotes from \"../../assets/quotes.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DestinationCard, SearchBox, HomeAddCard } from \"../../components\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport HomeBanner from \"../../assets/images/homebanner.jpg\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function HomePage({ user, ...props }) {\r\n  const [coordinates, setCoordinates] = useState({});\r\n\r\n  const citiesData = [...jsonData];\r\n  const randomDestinations = citiesData\r\n    .sort(() => 0.5 - Math.random())\r\n    .slice(0, 4);\r\n\r\n  const quotes = [...jsonQuotes];\r\n  const getRandom = quotes[Math.floor(Math.random() * quotes.length)];\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSearch = () => {\r\n    if (coordinates.lat && coordinates.lng) {\r\n      navigate(\"/explore\", {\r\n        state: {\r\n          destinationCoordinates: {\r\n            lat: coordinates.lat,\r\n            lng: coordinates.lng,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        maxWidth=\"xl\"\r\n        container\r\n        sx={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          mt: 1,\r\n        }}\r\n      >\r\n        <Box\r\n          item\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            height: 350,\r\n            maxWidth: \"100%\",\r\n            backgroundImage: `url(${HomeBanner})`,\r\n            mt: -1,\r\n            ml: 5,\r\n          }}\r\n          className=\"home-banner-box\"\r\n        >\r\n          <Box\r\n            item\r\n            xs={12}\r\n            sx={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Paper sx={{ width: \"40%\", p: 1, minWidth: 250 }}>\r\n              <SearchBox setCoordinates={setCoordinates} />\r\n            </Paper>\r\n            <Typography variant=\"h6\" mt={1}>\r\n              {getRandom.quote}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          item\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            mt: 2,\r\n            ml: 5,\r\n          }}\r\n        >\r\n          <HomeAddCard />\r\n          <Typography variant=\"h5\" mt={1}>\r\n            Popular destinations\r\n          </Typography>\r\n        </Box>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            mt: 1,\r\n            ml: 5,\r\n            mb: 5,\r\n          }}\r\n        >\r\n          {randomDestinations.map((destination, i) => (\r\n            <DestinationCard destination={destination} key={i} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\MyTrips\\index.jsx",["270","271"],[],"import \"./MyTrips.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getAllTrips } from \"../../services/tripsWs\";\r\nimport { TripCard, AddTripCard } from \"../../components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nfunction MyTrips({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [userTrips, setUserTrips] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Validate if user is logged in (JWT)\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (!response.status) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  // Get all trips from user\r\n  const findUserTrips = async () => {\r\n    const haveTrips = await getAllTrips();\r\n    if (haveTrips) {\r\n      setUserTrips(haveTrips.data.trips);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n    findUserTrips();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        maxWidth=\"lg\"\r\n        className=\"mytrips-container\"\r\n        sx={{ display: \"flex\", flexWrap: \"wrap\" }}\r\n      >\r\n        {!isLoading && userTrips.length > 0 ? (\r\n          <>\r\n            {userTrips.map((trip, i) => (\r\n              <TripCard key={i} trip={trip} />\r\n            ))}\r\n            <AddTripCard />\r\n          </>\r\n        ) : (\r\n          <AddTripCard />\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyTrips;\r\n","D:\\Itinerary Planner\\frontend\\src\\pages\\ChangePassword\\index.jsx",["272"],[],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport { ChangePasswordForm } from \"../../components\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst ChangePassword = ({ props }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Validate if user is logged in (JWT)\r\n  const verifyUser = async () => {\r\n    setIsLoading(true);\r\n    const response = await getUserWS();\r\n    if (!response.status) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setUser(response.data.user);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isLoading && (\r\n        <>\r\n          <Grid container spacing={2} sx={{ justifyContent: \"center\" }}>\r\n            <ChangePasswordForm user={user} />\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","D:\\Itinerary Planner\\frontend\\src\\services\\tripsWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\pages\\MyPlaces\\index.jsx",["273"],[],"import \"./MyPlaces.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getOneTrip, getAllPlacesFromTrip } from \"../../services/tripsWs\";\r\nimport { PlacesList, MapPlaces } from \"../../components\";\r\nimport { getUserWS } from \"../../services/authWs\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nfunction MyPlaces({ props }) {\r\n  const [user, setUser] = useState(null);\r\n  // Map\r\n  const [coordinates, setCoordinates] = useState({});\r\n  // Places from trip\r\n  const [places, setPlaces] = useState([]);\r\n  const [loadingPlaces, setLoadingPlaces] = useState(false);\r\n  // Trip Details\r\n  const [trip, setTrip] = useState({});\r\n  // Loading Control\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const verifyUser = async () => {\r\n    const response = await getUserWS();\r\n    if (response.status) {\r\n      setUser(response.data.user);\r\n    }\r\n  };\r\n\r\n  const getTripAndPlaces = async () => {\r\n    setIsLoading(true);\r\n    setLoadingPlaces(true);\r\n    try {\r\n      const trip = await getOneTrip(id); // For use it as title\r\n      if (trip) {\r\n        setTrip(trip.data.trip);\r\n      }\r\n      const placesInTrip = await getAllPlacesFromTrip(id); // For use it as places\r\n      if (placesInTrip) {\r\n        setPlaces(placesInTrip.data.places);\r\n        setCoordinates({\r\n          lat: placesInTrip.data.places[0].lat,\r\n          lng: placesInTrip.data.places[0].lng,\r\n        });\r\n        setIsLoading(false);\r\n        setIsSaved(true); // To display delete button in place card\r\n      } else {\r\n        navigate(\"/mytrips\");\r\n      }\r\n      setIsLoading(false);\r\n      setLoadingPlaces(false);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTripAndPlaces();\r\n    verifyUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Grid container spacing={2} className=\"myplaces-grid\">\r\n        <Grid item xs={12} md={12} className=\"search-box-grid\">\r\n          <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n            {trip.title}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          mt={1}\r\n          style={{ maxHeight: \"80vh\", overflow: \"auto\" }}\r\n        >\r\n          <PlacesList\r\n            loadingPlaces={loadingPlaces}\r\n            places={places}\r\n            user={user}\r\n            isSaved={isSaved}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={6}\r\n          className=\"map-grid\"\r\n          style={{ maxHeight: \"100%\" }}\r\n        >\r\n          <Paper variant=\"outlined\">\r\n            {!isLoading && (\r\n              <MapPlaces coordinates={coordinates} places={places} zoom={12} />\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPlaces;\r\n","D:\\Itinerary Planner\\frontend\\src\\services\\uploadWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\services\\placesWs.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\components\\PlaceCard\\index.jsx",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\WeatherAPI.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\TravelAPI.js",[],[],"D:\\Itinerary Planner\\frontend\\src\\api\\GeoLocationAPI.js",[],[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":30,"column":6,"nodeType":"280","endLine":30,"endColumn":8,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":7,"column":16,"nodeType":"284","messageId":"285","endLine":7,"endColumn":23},{"ruleId":"282","severity":1,"message":"286","line":3,"column":18,"nodeType":"284","messageId":"285","endLine":3,"endColumn":26},{"ruleId":"282","severity":1,"message":"287","line":5,"column":3,"nodeType":"284","messageId":"285","endLine":5,"endColumn":6},{"ruleId":"282","severity":1,"message":"288","line":13,"column":3,"nodeType":"284","messageId":"285","endLine":13,"endColumn":13},{"ruleId":"282","severity":1,"message":"289","line":19,"column":8,"nodeType":"284","messageId":"285","endLine":19,"endColumn":20},{"ruleId":"278","severity":1,"message":"290","line":48,"column":6,"nodeType":"280","endLine":48,"endColumn":8,"suggestions":"291"},{"ruleId":"282","severity":1,"message":"292","line":15,"column":10,"nodeType":"284","messageId":"285","endLine":15,"endColumn":15},{"ruleId":"282","severity":1,"message":"293","line":28,"column":9,"nodeType":"284","messageId":"285","endLine":28,"endColumn":17},{"ruleId":"282","severity":1,"message":"292","line":26,"column":10,"nodeType":"284","messageId":"285","endLine":26,"endColumn":15},{"ruleId":"278","severity":1,"message":"294","line":23,"column":6,"nodeType":"280","endLine":23,"endColumn":8,"suggestions":"295"},{"ruleId":"278","severity":1,"message":"296","line":60,"column":6,"nodeType":"280","endLine":60,"endColumn":8,"suggestions":"297"},{"ruleId":"278","severity":1,"message":"298","line":41,"column":6,"nodeType":"280","endLine":41,"endColumn":19,"suggestions":"299"},{"ruleId":"282","severity":1,"message":"300","line":10,"column":10,"nodeType":"284","messageId":"285","endLine":10,"endColumn":14},{"ruleId":"278","severity":1,"message":"301","line":38,"column":6,"nodeType":"280","endLine":38,"endColumn":8,"suggestions":"302"},{"ruleId":"278","severity":1,"message":"301","line":27,"column":6,"nodeType":"280","endLine":27,"endColumn":8,"suggestions":"303"},{"ruleId":"278","severity":1,"message":"304","line":66,"column":6,"nodeType":"280","endLine":66,"endColumn":8,"suggestions":"305"},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formatDate'. Either include it or remove the dependency array.","ArrayExpression",["308"],"no-unused-vars","'setOpen' is assigned a value but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'TravelfyLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'placesFromTrip'. Either include it or remove the dependency array.",["309"],"'error' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["310"],"React Hook useEffect has a missing dependency: 'defaultGeoLocation'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.",["312"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyUser'. Either include it or remove the dependency array.",["313"],["314"],"React Hook useEffect has a missing dependency: 'getTripAndPlaces'. Either include it or remove the dependency array.",["315"],"no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [formatDate]",{"range":"331","text":"332"},"Update the dependencies array to be: [placesFromTrip]",{"range":"333","text":"334"},"Update the dependencies array to be: [isAuthenticated]",{"range":"335","text":"336"},"Update the dependencies array to be: [defaultGeoLocation]",{"range":"337","text":"338"},"Update the dependencies array to be: [coordinates, handleSearch]",{"range":"339","text":"340"},"Update the dependencies array to be: [verifyUser]",{"range":"341","text":"342"},{"range":"343","text":"342"},"Update the dependencies array to be: [getTripAndPlaces]",{"range":"344","text":"345"},[1204,1206],"[formatDate]",[1452,1454],"[placesFromTrip]",[671,673],"[isAuthenticated]",[1982,1984],"[defaultGeoLocation]",[1267,1280],"[coordinates, handleSearch]",[1083,1085],"[verifyUser]",[757,759],[2065,2067],"[getTripAndPlaces]"]